{"version":3,"sources":["images/property_1.jpg","images/property_2.jpg","images/property_3.jpg","logo.svg","contract.js","App.js","reportWebVitals.js","index.js"],"names":["Contract","this","LISTING_FEE","ethers","utils","parseUnits","APPLICATION_FEE","useLocalNode","a","provider","providers","JsonRpcProvider","listAccounts","accounts","owner","homeOwner1","applicant1","Web3Provider","window","ethereum","propertyID","applicationID","address","monthlyRent","totalHouseMate","rent","toString","getHomeOwner","signer","contract","Config","Roomilicious","abi","listProperty","value","result","toNumber","console","log","getOwner","approvePropertyListing","monthlyIncome","income","getApplicant","applyToProperty","declineApplicant","callbackApproved","callbackRejected","on","event","oracleRentalVerifier","startRentalProcess","submitTenantResearch","getSigner","request","method","App","useState","logs","setLogs","setPropertyID","setApplicationID","setContract","displayMessage","msg","useEffect","start","initialize","applyToRental","applicationApproved","applicationRejected","property1","require","default","property2","property3","className","Grid","container","item","xs","align","src","style","maxWidth","maxHeight","Button","color","variant","onClick","marginTop","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f73e6052.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/property_1.6cd075c7.jpg\";","export default __webpack_public_path__ + \"static/media/property_2.9c1d4dc4.jpg\";","export default __webpack_public_path__ + \"static/media/property_3.53665fd3.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Roomilicious from \"./artifacts/contracts/Roomilicious.sol/Roomilicious.json\";\r\nimport Config from \"./artifacts/contracts/config.json\";\r\nimport { useScrollTrigger } from \"@material-ui/core\";\r\n\r\nexport default class Contract {\r\n  constructor() {\r\n    this.LISTING_FEE = ethers.utils.parseUnits(\"1\", \"wei\");\r\n    this.APPLICATION_FEE = ethers.utils.parseUnits(\"1\", \"wei\");\r\n  }\r\n\r\n  //using local blockchain hardhat node\r\n  async initialize(useLocalNode) {    \r\n      this.useLocalNode = useLocalNode;\r\n\r\n      if (this.useLocalNode) {\r\n        \r\n        //this is only for local testing using local hardhat node\r\n        this.provider = new ethers.providers.JsonRpcProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        this.accounts = await this.provider.listAccounts();\r\n\r\n        this.owner = this.accounts[0];\r\n        this.homeOwner1 = this.accounts[1];\r\n        this.applicant1 = this.accounts[2];\r\n      } \r\n      else \r\n      {\r\n        this.provider = new ethers.providers.Web3Provider(window.ethereum);     \r\n        //await window.ethereum.request({ method: \"eth_requestAccounts\" }); \r\n      }\r\n\r\n      this.propertyID = 0;\r\n      this.applicationID = 0;  \r\n  }\r\n\r\n  async listProperty(address, monthlyRent, totalHouseMate) \r\n  {\r\n    try\r\n    {\r\n      \r\n    let rent = ethers.utils.parseUnits(monthlyRent.toString(), \"wei\");\r\n  \r\n    let signer = await this.getHomeOwner();    \r\n    let contract = new ethers.Contract(\r\n      Config,\r\n      Roomilicious.abi,\r\n      signer\r\n    );\r\n\r\n    let result = await contract.listProperty(address, rent, totalHouseMate, {\r\n      value: this.LISTING_FEE,\r\n    });\r\n\r\n    this.propertyID = result.value.toNumber();    \r\n    return this.propertyID;\r\n  }\r\n  catch(error)\r\n  {\r\n    console.log(error);\r\n  }\r\n  }\r\n\r\n  async approvePropertyListing(propertyID) {\r\n    let signer = await this.getOwner();\r\n    let contract = new ethers.Contract(\r\n      Config,\r\n      Roomilicious.abi,\r\n      signer      \r\n    );\r\n    await contract.approvePropertyListing(propertyID);\r\n  }\r\n\r\n  async applyToRental(propertyID, monthlyIncome) {\r\n    let income = ethers.utils.parseUnits(monthlyIncome.toString(), \"wei\");\r\n    \r\n    let signer = await  this.getApplicant();\r\n    let contract = new ethers.Contract(\r\n      Config,\r\n      Roomilicious.abi,signer\r\n    );\r\n    let result = await contract.applyToProperty(propertyID, income, {\r\n      value: this.APPLICATION_FEE,\r\n    });\r\n    this.applicationID = result.value.toNumber();\r\n    return this.applicationID;\r\n  }\r\n\r\n\r\n  async declineApplicant(applicationID) {\r\n    let signer = await this.getHomeOwner()\r\n\r\n    let contract = new ethers.Contract(\r\n      Config,\r\n      Roomilicious.abi,\r\n      signer\r\n    );\r\n    await contract.declineApplicant(applicationID);\r\n    return true;\r\n  }\r\n\r\n  async startRentalProcess(applicationID, callbackApproved, callbackRejected) {\r\n    \r\n    try {\r\n\r\n      let signer = await this.getHomeOwner()\r\n      let contract = new ethers.Contract(\r\n        Config,\r\n        Roomilicious.abi, signer);//signer        \r\n      \r\n\r\n        debugger;\r\n      //listening to the event to call oracles\r\n      contract.on(\"StartRentalProcessEvent\", (result, event) => {\r\n        debugger;\r\n        console.log(\"oracle has been called.\")\r\n        this.oracleRentalVerifier(result.toNumber());\r\n      });\r\n\r\n      contract.on(\"ApplicationApprovedEvent\", (result, event) => {\r\n        debugger;\r\n        callbackApproved(result.toNumber());\r\n      });\r\n\r\n      contract.on(\"ApplicationRejectedEvent\", (result, event) => {\r\n        debugger;\r\n        callbackRejected(result.toNumber());\r\n      });\r\n\r\n      await contract.startRentalProcess(applicationID);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async oracleRentalVerifier(applicationID) {\r\n    debugger;\r\n    let signer = await this.getOwner();\r\n    try {\r\n      let contract = new ethers.Contract(\r\n        Config,\r\n        Roomilicious.abi, signer\r\n      );\r\n      await contract.submitTenantResearch(this.applicationID, true);\r\n      await contract.submitTenantResearch(this.applicationID, false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //get signers\r\n  \r\n  async getApplicant()\r\n  {\r\n    let signer;\r\n\r\n    if(this.useLocalNode)\r\n    {\r\n        signer = await this.provider.getSigner(this.applicant1);        \r\n    }\r\n    else\r\n    {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        signer = this.provider.getSigner();        \r\n    }\r\n    return signer;\r\n  }\r\n\r\n  async getOwner()\r\n  {\r\n    if(this.useLocalNode)\r\n    {\r\n        return await this.provider.getSigner(this.owner);\r\n    }\r\n    else\r\n    {\r\n      \r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        return await this.provider.getSigner();        \r\n    }    \r\n  }\r\n\r\n  async getHomeOwner()\r\n  { \r\n    if(this.useLocalNode)\r\n    {        \r\n        return await this.provider.getSigner(this.homeOwner1);\r\n    }\r\n    else\r\n    {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        return await this.provider.getSigner();        \r\n    }\r\n  }\r\n}\r\n\r\n// const [greeting, setGreetingValue] = useState();\r\n\r\n// async function requestAccount() {\r\n//   await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n// }\r\n\r\n// async function fetchGreeting() {\r\n//   if (typeof window.ethereum !== \"undefined\") {\r\n//     const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n//     const contract = new ethers.Contract(\r\n//       greeterAddress,\r\n//       Greeter.abi,\r\n//       provider\r\n//     );\r\n//     try {\r\n//       const data = await contract.greet();\r\n//       console.log(\"data: \", data);\r\n//     } catch (err) {\r\n//       console.log(\"Error: \", err);\r\n//     }\r\n//   }\r\n// }\r\n\r\n// // call the smart contract, send an update\r\n// async function setGreeting() {\r\n//   if (!greeting) return;\r\n\r\n//   if (typeof window.ethereum !== \"undefined\") {\r\n//     await requestAccount();\r\n//     const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n//\r\n//     const signer = provider.getSigner();\r\n\r\n//     const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\r\n//     const transaction = await contract.setGreeting(greeting);\r\n//     await transaction.wait();\r\n//     fetchGreeting();\r\n//   }\r\n// }\r\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  Button,\n  Container,\n  AppBar,\n  Typography,\n  Grow,\n  Grid,\n} from \"@material-ui/core\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"./artifacts/contracts/Greeter.sol/Greeter.json\";\nimport Contract from \"./contract\";\n\nfunction App() {\n  const [logs, setLogs] = useState([]);\n  const [propertyID, setPropertyID] = useState(0);\n  const [applicationID, setApplicationID] = useState(0);\n  const [contract, setContract] = useState();\n\n  useEffect(() => {\n    setContract(new Contract());\n    displayMessage(\"Contract instantiated. Be ready to use 3 different account in the metamask, for contract owner, property owner, and applicant.\");\n    displayMessage(\"When you are ready go ahead and click on any apply button above.\");\n\n  }, []);\n\n  function displayMessage(msg) {\n    setLogs((logs) => [...logs, msg]);\n  }\n\n  const start = async () => {\n    await contract.initialize(false);\n    displayMessage(\"Contract initialized.\");\n\n    var propertyID = await contract.listProperty(\"123 main st\", 1500, 2);\n    displayMessage(\"property listed.\");\n    setPropertyID(propertyID);\n    \n    \n    await contract.approvePropertyListing(propertyID);\n    displayMessage(\"Approved property listing.\");\n    \n    var applicationID = await contract.applyToRental(propertyID, 1500);\n    displayMessage(\n      \"Applicant apply to property : \" +\n        propertyID +\n        \" with applicationid \" +\n        applicationID\n    );\n    setApplicationID(applicationID);\n    await contract.declineApplicant(applicationID);\n    displayMessage(\n      \"Owner declined applicant with applicationID \" + applicationID\n    );\n    await contract.startRentalProcess(\n      applicationID,\n      applicationApproved,\n      applicationRejected\n    );\n    displayMessage(\n      \"Property owner started the rental process...wait for the result below from oracles\"\n    );\n    displayMessage(\"waiting.......its coming....wait......\");\n  };\n\n  async function applicationApproved(applicationID) {\n    displayMessage(\"application : \" + applicationID + \" has been approved.\");\n  }\n\n  async function applicationRejected(applicationID) {\n    displayMessage(\"application : \" + applicationID + \" has been rejected.\");\n  }\n\n  var property1 = require(\"./images/property_1.jpg\").default;\n  var property2 = require(\"./images/property_2.jpg\").default;\n  var property3 = require(\"./images/property_3.jpg\").default;\n\n  return (\n    <div className=\"App\">\n      <main>\n        <Grid container>\n          <Grid item xs={12}>\n            <div align=\"left\">Customer Facing Site</div>\n\n            <Grid container>\n              <Grid item xs>\n                <img\n                  src={property1}\n                  style={{ maxWidth: \"300px\", maxHeight: \"500px\" }}\n                />\n                <p align=\"center\">\n                  I have a Master Bedroom for rent in a townhome, you will have\n                  your own bedroom and bathroom with walk in closet, garden tub,\n                  and shower. The kitchen, living room, and washer/dryer is\n                  shared. Close to Brandon Mall, I-, and many restaurants. This\n                  is a safe family gated community with a pool.\n                </p>\n                <Button color=\"primary\" variant=\"contained\" onClick={() => start()}> \n                  Apply\n                </Button>\n              </Grid>\n              <Grid item xs>\n                <img\n                  src={property2}\n                  style={{ maxWidth: \"300px\", maxHeight: \"500px\" }}\n                />\n                <p align=\"center\">\n                  Looking for a new roommate. A stunning NEWLY RENOVATED\n                  Victorian terrace with an abundance of CHARACTER FEATURES,\n                  located within the catchment area of EXCELLENT SCHOOLS and\n                  benefiting from a wealth of local amenities. It would make the\n                  perfect FAMIILY HOME.\n                </p>\n                <Button color=\"primary\" variant=\"contained\" onClick={() => start()}>\n                  Apply\n                </Button>\n              </Grid>\n              <Grid item xs>\n                <img\n                  src={property3}\n                  style={{ maxWidth: \"300px\", maxHeight: \"500px\" }}\n                />\n                <p align=\"center\">\n                  Room for Rent in Beautiful & Safe West San Jose'. Room is\n                  fully furnished~for one person, only. Looking for one person\n                  who is very quiet, clean, neat, responsible & respectful. Home\n                  is Chemical & Scent free & Environmentally healthy &               \n                </p>\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={() => start()}\n                >\n                  Apply\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} style={{ marginTop: \"100px\" }}>\n            <h2> INTERNAL PROCESS BEHIND THE SCENE</h2>\n            {logs.map((log) => (\n              <div>{log}</div>\n            ))}\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}