{"version":3,"sources":["images/property_1.jpg","images/property_2.jpg","images/property_3.jpg","logo.svg","contract.js","App.js","reportWebVitals.js","index.js"],"names":["Contract","this","LISTING_FEE","ethers","utils","parseUnits","APPLICATION_FEE","a","provider","providers","JsonRpcProvider","listAccounts","accounts","owner","homeOwner1","applicant1","propertyID","applicationID","console","log","address","monthlyRent","totalHouseMate","rent","toString","contract","Config","Roomilicious","abi","getSigner","listProperty","value","result","toNumber","approvePropertyListing","monthlyIncome","income","applyToProperty","declineApplicant","callbackApproved","callbackRejected","on","event","oracleRentalVerifier","startRentalProcess","submitTenantResearch","App","useState","logs","setLogs","setPropertyID","setApplicationID","displayMessage","msg","initialize","applyToRental","applicationApproved","applicationRejected","useEffect","test","property1","require","default","property2","property3","className","Grid","container","item","xs","align","src","style","maxWidth","maxHeight","Button","color","variant","marginTop","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20933719.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/property_1.6cd075c7.jpg\";","export default __webpack_public_path__ + \"static/media/property_2.9c1d4dc4.jpg\";","export default __webpack_public_path__ + \"static/media/property_3.53665fd3.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Roomilicious from \"./artifacts/contracts/Roomilicious.sol/Roomilicious.json\";\r\nimport Config from \"./artifacts/contracts/config.json\";\r\n\r\nexport default class Contract {\r\n  constructor() {\r\n    this.LISTING_FEE = ethers.utils.parseUnits(\"1\", \"wei\");\r\n    this.APPLICATION_FEE = ethers.utils.parseUnits(\"1\", \"wei\");\r\n\r\n    //this.contract;\r\n    //this.accounts = [];\r\n    //this.provider;\r\n    //this.homeOwner1;\r\n\r\n    //this.initialize();\r\n    //const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    //local test\r\n\r\n    //const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n    // const contract = new ethers.Contract(\r\n    //   greeterAddress,\r\n    //   Greeter.abi,\r\n    //   provider\r\n    // );\r\n  }\r\n\r\n  //using local blockchain hardhat node\r\n  async initialize() {\r\n    try {\r\n      \r\n      //const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      this.provider = new ethers.providers.JsonRpcProvider(\r\n        \"http://127.0.0.1:8545\"\r\n      );\r\n      this.accounts = await this.provider.listAccounts();\r\n      //this.accounts = await this.provider.getSigners();\r\n      this.owner = this.accounts[0];\r\n      this.homeOwner1 = this.accounts[1];\r\n      this.applicant1 = this.accounts[2];\r\n      this.propertyID = 0;\r\n      this.applicationID = 0;\r\n    } catch (error) {\r\n      \r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async listProperty(address, monthlyRent, totalHouseMate) {\r\n        \r\n      let rent = ethers.utils.parseUnits(monthlyRent.toString(), \"wei\");\r\n      let contract = new ethers.Contract(\r\n        Config,\r\n        Roomilicious.abi,\r\n        this.provider.getSigner(this.homeOwner1)\r\n      );\r\n      let result = await contract.listProperty(address, rent, totalHouseMate, {\r\n        value: this.LISTING_FEE,\r\n      });\r\n\r\n      this.propertyID = result.value.toNumber();\r\n\r\n      //let result = await contract.getAllProperties();\r\n      return this.propertyID;\r\n      \r\n  }\r\n\r\n  async approvePropertyListing(propertyID) {\r\n    let contract = new ethers.Contract(\r\n      Config,\r\n      Roomilicious.abi,\r\n      this.provider.getSigner(this.owner)\r\n    );\r\n    await contract.approvePropertyListing(propertyID);\r\n  }\r\n\r\n  async applyToRental(propertyID, monthlyIncome) {\r\n    \r\n    let income = ethers.utils.parseUnits(monthlyIncome.toString(), \"wei\");\r\n    let contract = new ethers.Contract(\r\n      Config,\r\n      Roomilicious.abi,\r\n      this.provider.getSigner(this.applicant1)\r\n    );\r\n    let result = await contract.applyToProperty(propertyID, income, {\r\n      value: this.APPLICATION_FEE,\r\n    });\r\n    this.applicationID = result.value.toNumber();\r\n    return this.applicationID;\r\n  }\r\n\r\n  async declineApplicant(applicationID) {    \r\n      \r\n      let contract = new ethers.Contract(Config,Roomilicious.abi,this.provider.getSigner(this.homeOwner1));\r\n      await contract.declineApplicant(applicationID);\r\n      return true;    \r\n  }\r\n\r\n  async startRentalProcess(applicationID, callbackApproved, callbackRejected) {\r\n    debugger;\r\n    try {\r\n      let contract = new ethers.Contract(Config,Roomilicious.abi,this.provider.getSigner(this.homeOwner1));\r\n\r\n       //listening to the event to call oracles\r\n       contract.on(\"StartRentalProcessEvent\", (result, event) =>\r\n       {\r\n          debugger;   \r\n          this.oracleRentalVerifier(result.toNumber());\r\n       });\r\n\r\n\r\n       contract.on(\"ApplicationApprovedEvent\", (result, event) =>\r\n       {\r\n            debugger;            \r\n            callbackApproved(result.toNumber());\r\n       });\r\n\r\n       contract.on(\"ApplicationRejectedEvent\", (result, event) =>\r\n       {\r\n            debugger;  \r\n            callbackRejected(result.toNumber());\r\n       });      \r\n\r\n      await contract.startRentalProcess(applicationID);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async oracleRentalVerifier(applicationID) \r\n  {\r\n    \r\n    try {\r\n      let contract = new ethers.Contract(Config,Roomilicious.abi,this.provider.getSigner(this.owner));\r\n      await contract.submitTenantResearch(this.applicationID, true);\r\n      await contract.submitTenantResearch(this.applicationID, false);\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error);\r\n        \r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// const [greeting, setGreetingValue] = useState();\r\n\r\n// async function requestAccount() {\r\n//   await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n// }\r\n\r\n// async function fetchGreeting() {\r\n//   if (typeof window.ethereum !== \"undefined\") {\r\n//     const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n//     const contract = new ethers.Contract(\r\n//       greeterAddress,\r\n//       Greeter.abi,\r\n//       provider\r\n//     );\r\n//     try {\r\n//       const data = await contract.greet();\r\n//       console.log(\"data: \", data);\r\n//     } catch (err) {\r\n//       console.log(\"Error: \", err);\r\n//     }\r\n//   }\r\n// }\r\n\r\n// // call the smart contract, send an update\r\n// async function setGreeting() {\r\n//   if (!greeting) return;\r\n\r\n//   if (typeof window.ethereum !== \"undefined\") {\r\n//     await requestAccount();\r\n//     const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n//     \r\n//     const signer = provider.getSigner();\r\n\r\n//     const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\r\n//     const transaction = await contract.setGreeting(greeting);\r\n//     await transaction.wait();\r\n//     fetchGreeting();\r\n//   }\r\n// }","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Button, Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport { ethers } from \"ethers\";\nimport Greeter from \"./artifacts/contracts/Greeter.sol/Greeter.json\";\nimport Contract from \"./contract\"\n\nfunction App() {\n\n  const [logs, setLogs] = useState([]);\n  const [propertyID, setPropertyID] = useState(0);\n  const [applicationID, setApplicationID] = useState(0);\n\n  useEffect(() => {\n    test();\n  },[]);\n\n  function displayMessage(msg) {    \n    setLogs((logs) => [...logs, msg]);\n  }\n\n  async function test()\n  {    \n    var contract = new Contract();\n    displayMessage(\"Contract instantiated.\");\n    await contract.initialize();\n    displayMessage(\"Contract initialized.\");    \n    var propertyID = await contract.listProperty(\"123 main st\", 1500, 2);\n    displayMessage(\"property listed.\");\n    setPropertyID(propertyID);\n    debugger;\n    await contract.approvePropertyListing(propertyID);\n    displayMessage(\"Approved property listing.\");\n    debugger;\n    var applicationID = await contract.applyToRental(propertyID, 1500);\n    displayMessage(\"Applicant apply to property : \" + propertyID + \" with applicationid \" + applicationID);\n    setApplicationID(applicationID);\n    await contract.declineApplicant(applicationID);\n    displayMessage(\"Owner declined applicant with applicationID \" + applicationID);\n    await contract.startRentalProcess(applicationID, applicationApproved, applicationRejected);  \n    displayMessage(\"Property owner started the rental process...wait for the result below from oracles\");\n    displayMessage(\"waiting.......its coming....wait......\");\n  }\n\n  async function applicationApproved(applicationID)\n  {\n    displayMessage(\"application : \" + applicationID + \" has been approved.\")\n  }\n\n  async function applicationRejected(applicationID)\n  {\n    displayMessage(\"application : \" + applicationID + \" has been rejected.\")\n  }\n\n  var property1 = require(\"./images/property_1.jpg\").default;\n  var property2 = require(\"./images/property_2.jpg\").default;\n  var property3 = require(\"./images/property_3.jpg\").default;\n\n  return (\n    <div className=\"App\">      \n      <main>\n        <Grid container>\n          <Grid item xs={12}>\n            <div align=\"left\">Customer Facing Site</div>\n\n            <Grid container>\n              <Grid item xs>\n                <img\n                  src={property1}\n                  style={{ maxWidth: \"300px\", maxHeight: \"500px\" }}\n                />\n                <p align=\"center\">\n                  is simply dummy text of the printing and typesetting industry.\n                  Lorem Ipsum has been the industry's standard dummy text ever\n                  since the 1500s, when an unknown printer took a galley of type\n                  and scrambled it to make a type specimen book. It has survived               \n                </p>\n                <Button color=\"primary\" variant=\"contained\">Apply</Button>\n              </Grid>\n              <Grid item xs>\n                <img src={property2} style={{ maxWidth: \"300px\", maxHeight: \"500px\" }}/>\n                <p align=\"center\">\n                  is simply dummy text of the printing and typesetting industry.\n                  Lorem Ipsum has been the industry's standard dummy text ever\n                  since the 1500s, when an unknown printer took a galley of type\n                  and scrambled it to make a type specimen book. It has survived               \n                </p>\n                <Button color=\"primary\" variant=\"contained\">Apply</Button>\n              </Grid>\n              <Grid item xs>\n                <img src={property3} style={{ maxWidth: \"300px\", maxHeight: \"500px\" }}/>\n                <p align=\"center\">\n                  is simply dummy text of the printing and typesetting industry.\n                  Lorem Ipsum has been the industry's standard dummy text ever\n                  since the 1500s, when an unknown printer took a galley of type\n                  and scrambled it to make a type specimen book. It has survived               \n                </p>\n                <Button color=\"primary\" variant=\"contained\">Apply</Button>\n              </Grid>\n            </Grid>\n          </Grid>          \n          <Grid item xs={12} style={{marginTop: \"100px\"}}>            \n        <h2> INTERNAL PROCESS BEHIND THE SCENE</h2>\n          {logs.map((log) => (\n          <div>{log}</div>\n          ))}\n          </Grid>\n        </Grid>       \n      </main>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}